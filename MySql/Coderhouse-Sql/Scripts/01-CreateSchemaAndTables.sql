CREATE SCHEMA IF NOT EXISTS MY_SHOP;

USE MY_SHOP;


-- //////////////CREACION DE TABLAS PRINCIPALES//////////////


-- TABLE PRODUCTS_CATEGORY: esta tabla contiene descripciones de los productos
CREATE TABLE IF NOT EXISTS `PRODUCTS_CATEGORY`(
	`ID_CAT` INT AUTO_INCREMENT,
    `CATEGORY` VARCHAR(40) NOT NULL,
    CONSTRAINT PK_PRODUCTS_CATEGORY PRIMARY KEY(ID_CAT)
);

-- TABLE PRODUCTS_ASSEMBLERS: esta tabla contiene la nomina de ensambladores (fabricantes/marcas) de los productos
CREATE TABLE IF NOT EXISTS `PRODUCTS_ASSEMBLERS`(
	`ID_ASSEMBLER` INT AUTO_INCREMENT,
    `NAME` VARCHAR (30) NOT NULL,
    CONSTRAINT PK_PRODUCTS_ASSEMBLERS PRIMARY KEY(ID_ASSEMBLER)
);

-- TABLE PRODUCTS_TYPE: esta tabla contiene los tipos de productos
CREATE TABLE IF NOT EXISTS `PRODUCTS_TYPE`(
	`ID_TYPE` INT AUTO_INCREMENT,
    `NAME_TYPE` VARCHAR(30) NOT NULL,
    CONSTRAINT PK_PRODUCTS_TYPE PRIMARY KEY(ID_TYPE)
);

-- TABLE PRODUCTS: esta tabla contiene el listado total de productos que se encuentran a la venta
CREATE TABLE IF NOT EXISTS `PRODUCTS`(
	`ID_PROD` INT AUTO_INCREMENT,
    `NAME` VARCHAR(100) NOT NULL,
    `ID_ASSEMBLER` INT NOT NULL, /*FK*/
    `ID_TYPE` INT NOT NULL, /*FK*/
    `ID_CAT` INT NOT NULL, /*FK*/
    `PRICE` DECIMAL(6,2) NOT NULL,
    `STOCK` INT NOT NULL,
    CONSTRAINT PK_PRODUCTS PRIMARY KEY(ID_PROD)
);

-- TABLE SECTOR: esta tabla contiene los sectores de actividades dentro de la empresa
CREATE TABLE IF NOT EXISTS `SECTOR`(
	`ID_SECTOR` INT AUTO_INCREMENT,
    `SECTOR_NAME` VARCHAR (50) NOT NULL,
	CONSTRAINT PK_SECTOR PRIMARY KEY (ID_SECTOR)
);

-- TABLE EMPLOYEE_STATE: esta tabla contiene la situacion de los empleados
CREATE TABLE IF NOT EXISTS `EMPLOYEE_STATE`(
	`ID_STATE` INT AUTO_INCREMENT,
    `STATE` VARCHAR(35),
    CONSTRAINT PK_EMPLOYEE_STATE PRIMARY KEY (ID_STATE)
);

-- TABLE EMPLOYEES: esta tabla contiene la informacion de los empleados
CREATE TABLE IF NOT EXISTS `EMPLOYEES`(
	`ID_EMPL` INT AUTO_INCREMENT,	
    `NAMES` VARCHAR(50) NOT NULL,
    `LAST_NAME` VARCHAR(50) NOT NULL,    
    `PHONE` VARCHAR(20) NOT NULL,
    `ADRESS` VARCHAR(100),    
    `GENDER` ENUM ('M', 'F'),
    `BUSINESS_EMAIL` VARCHAR(50) NOT NULL,
    `ID_SECTOR` INT NOT NULL, /*FK*/
    `ID_STATE` INT NOT NULL, /*FK*/
    `DATE_BIRTH` DATE NOT NULL,
    `DATE_INCOME` DATE NOT NULL,
    CONSTRAINT PK_EMPLOYEES PRIMARY KEY (ID_EMPL, BUSINESS_EMAIL)
);

-- TABLE PROVINCE: esta tabla contiene la nomina de provincias de la argentina
CREATE TABLE IF NOT EXISTS PROVINCE(
	`ID_PROV` INT AUTO_INCREMENT,
    `PROVINCE` VARCHAR(30),
    CONSTRAINT PK_PROVINCE PRIMARY KEY (ID_PROV)
);

-- TABLE CLIENTS: esta tabla contiene el listado de clientes
CREATE TABLE IF NOT EXISTS `CLIENTS`( 
	`ID_CLIENT` INT AUTO_INCREMENT,
    `CUIL_CUIT` DOUBLE,
    `NAME` VARCHAR(60) NOT NULL,
    `LAST_NAME` VARCHAR(60) DEFAULT NULL,
    `COMPANY` BOOLEAN DEFAULT 0,
    `EMAIL` VARCHAR(100),
    `COUNTRY` VARCHAR(10) DEFAULT 'ARG',
    `ID_PROV` INT NOT NULL,/*FK*/
    `COD_POSTAL` INT NOT NULL,
    `ADRESS` VARCHAR(100) NOT NULL,   
    `PHONE_1` INT NOT NULL,
    `PHONE_2` INT DEFAULT NULL,
    CONSTRAINT PK_CLIENTS PRIMARY KEY(ID_CLIENT, CUIL_CUIT, EMAIL)
);

-- TABLE PAYMENT METHOD: esta tabla contienen las formas de pago que son aceptadas
CREATE TABLE IF NOT EXISTS `PAYMENT_METHOD`(
	`ID_PAY` INT AUTO_INCREMENT,
    `PAYMENT_METHOD` VARCHAR(30) NOT NULL,
    CONSTRAINT PK_PAYMENT_METHOD PRIMARY KEY(ID_PAY)
);

-- TABLE SALES: esta tabla contiene el registro de ventas realizadas
CREATE TABLE IF NOT EXISTS `SALES`(
	`ID_SALE` INT AUTO_INCREMENT,    
    `AMOUNT` DECIMAL(7,2) NOT NULL,
    `ID_CLIENT` INT NOT NULL, /*FK*/
    `ID_PAY` INT NOT NULL, /*FK*/
    `ID_EMPL` INT NOT NULL, /*FK*/
	`DATE` DATE NOT NULL,
    `HOUR` TIME NOT NULL,
    CONSTRAINT PK_SALES PRIMARY KEY(ID_SALE)
);

-- TABLE SALES_DESCRIPTION: esta tabla contiene los detalles de las ventas (tipo de producto que que conforma la venta y la cantidad)
CREATE TABLE IF NOT EXISTS `SALES_DESCRIPTION`(
	`ID_SALE` INT, /*FK*/
    `ID_PROD` INT, /*FK*/
    `QUANTITY` INT NOT NULL,
    CONSTRAINT PK_SALES_DESCRIPTION PRIMARY KEY(ID_SALE, ID_PROD)
);



-- //////////////CREACION DE TABLAS DE AUDITORIA//////////////

-- Creacion de tabla de auditoria "LOG_PRODUCTS" para auditar la tabla "PRODUCTS"
CREATE TABLE IF NOT EXISTS `LOG_PRODUCTS`(
	`ID_LOG` INT AUTO_INCREMENT,
    `ACTIVITY` VARCHAR (6) NOT NULL,
    `OLD_DATA` VARCHAR (255) DEFAULT NULL,
    `NEW_DATA` VARCHAR (255) DEFAULT NULL,    
    `USER` VARCHAR(50) NOT NULL,
    `DATE_ACTIVITY` DATE NOT NULL,
    `HOUR_ACTIVITY` TIME NOT NULL,
    CONSTRAINT PK_LOG_PRODUCTS PRIMARY KEY (ID_LOG)
);

-- Creacion de tabla de auditoria "LOG_SALES" para auditar la tabla "SALES"
CREATE TABLE `LOG_SALES`(
	`ID_LOG` INT AUTO_INCREMENT,
    `ACTIVITY` VARCHAR (6) NOT NULL,
    `OLD_DATA` VARCHAR (255) DEFAULT NULL,
    `NEW_DATA` VARCHAR (255) DEFAULT NULL,    
    `USER` VARCHAR(50) NOT NULL,
    `DATE_ACTIVITY` DATE NOT NULL,
    `HOUR_ACTIVITY` TIME NOT NULL,
    CONSTRAINT PK_LOG_SALES PRIMARY KEY (ID_LOG)
);

-- Creacion de tabla de auditoria "LOG_CLIENTS" para auditar la tabla "CLIENTS"
CREATE TABLE `LOG_CLIENTS`(
	`ID_LOG` INT AUTO_INCREMENT,
    `ACTIVITY` VARCHAR (6) NOT NULL,
    `OLD_DATA` VARCHAR (255) DEFAULT NULL,
    `NEW_DATA` VARCHAR (255) DEFAULT NULL,    
    `USER` VARCHAR(50) NOT NULL,
    `DATE_ACTIVITY` DATE NOT NULL,
    `HOUR_ACTIVITY` TIME NOT NULL,
    CONSTRAINT PK_LOG_SALES PRIMARY KEY (ID_LOG)
);




-- //////////////FOREIGN KEYS//////////////

-- Relaciona tabla "PRODUCTS" con tablas "PRODUCTS_ASSEMBLERS", "PRODUCTS_TYPE", "PRODUCTS_DESCRIPTION"
ALTER TABLE PRODUCTS
ADD CONSTRAINT FK_PRODUCTS_PRODUCTS_ASSEMBLERS
	FOREIGN KEY(ID_ASSEMBLER) REFERENCES PRODUCTS_ASSEMBLERS(ID_ASSEMBLER),
ADD CONSTRAINT FK_PRODUCTS_PRODUCTS_TYPE
	FOREIGN KEY (ID_TYPE) REFERENCES PRODUCTS_TYPE(ID_TYPE),
ADD CONSTRAINT FK_PRODUCTS_PRODUCTS_CATEGORY
	FOREIGN KEY (ID_CAT) REFERENCES PRODUCTS_CATEGORY(ID_CAT);
    
    
-- Relaciona tabla "EMPLOYEES" con las tablas "SECTOR" y "EMPLOYEE_STATE"
ALTER TABLE EMPLOYEES
ADD CONSTRAINT FK_EMPLOYEES_SECTOR
	FOREIGN KEY (ID_SECTOR) REFERENCES SECTOR (ID_SECTOR),
ADD CONSTRAINT FK_EMPLOYEES_EMPLOYEE_STATE
	FOREIGN KEY (ID_STATE) REFERENCES EMPLOYEE_STATE (ID_STATE);

    
 -- Relaciona tabla "CLIENTS" con tabla "PROVINCE" Y "CITY"   
ALTER TABLE CLIENTS 
ADD CONSTRAINT FK_CLIENTS_PROVINCE
	FOREIGN KEY (ID_PROV) REFERENCES PROVINCE (ID_PROV);
    
    
-- Relaciona tabla "SALES" con tablas "CLIENTS", "PAYMENT_METHOD", "SELLERS"
ALTER TABLE SALES
ADD CONSTRAINT FK_SALES_CLIENTS
	FOREIGN KEY (ID_CLIENT)	REFERENCES CLIENTS(ID_CLIENT),
ADD CONSTRAINT FK_SALES_PAYMENT_METHOD
	FOREIGN KEY (ID_PAY) REFERENCES PAYMENT_METHOD(ID_PAY),
ADD CONSTRAINT FK_SALES_EMPLOYEEES
	FOREIGN KEY (ID_EMPL) REFERENCES EMPLOYEES(ID_EMPL);
    
    
 -- Relaciona tabla "SALES_DESCRIPTION con tablas "SALES", "PRODUCTS"   
ALTER TABLE SALES_DESCRIPTION
ADD CONSTRAINT FK_SALES_DESCRIPTION_SALES
	FOREIGN KEY (ID_SALE) REFERENCES SALES(ID_SALE),
ADD CONSTRAINT FK_SALES_DESCRIPTION_PRODUCTS
	FOREIGN KEY (ID_PROD) REFERENCES PRODUCTS (ID_PROD);



