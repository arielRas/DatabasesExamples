USE MY_SHOP;


-- //////////TEST DE FUNCIONES\\\\\\\\\\


-- Test de la funcion FN_BUSCAR_CLIENTE_X_ID
SELECT FN_BUSCAR_CLIENTE_X_ID(10) AS CLIENTE;
SELECT FN_BUSCAR_CLIENTE_X_ID(180) AS CLIENTE; -- MENSAJE DE ERROR POR ID INEXISTENTE

-- Test de la funcion FN_MAX_MIN_PRECIO_TIPO_PRODUCTO
SELECT FN_MAX_MIN_PRECIO_TIPO_PRODUCTO(5,'MIN') AS PROD_MIN_PRECIO;
SELECT FN_MAX_MIN_PRECIO_TIPO_PRODUCTO(1,'MAX') AS PROD_MAX_PRECIO;
SELECT FN_MAX_MIN_PRECIO_TIPO_PRODUCTO(1,'MON') AS PROD_MIN_PRECIO; -- MENSAJE DE ERROR POR PARAMETRO INCORRECTO
SELECT FN_MAX_MIN_PRECIO_TIPO_PRODUCTO(200,'MAX') AS PROD_MAX_PRECIO; -- MENSAJE DE ERROR POR ID INEXISTENTE



-- //////////TEST DE PROCEDIMIENTOS\\\\\\\\\\


-- Test del procedimieto SP_NEW_PRODUCT
CALL SP_NEW_PRODUCT("Ryzen 7 7700 5.3GHz Turbo AM5",3,1,1,412.00,99);

-- Test del procedimiento SP_UPDATE_STOCK
SELECT * FROM PRODUCTS WHERE ID_PROD = 1;
CALL SP_UPDATE_STOCK(1,'SUMAR','20');
CALL SP_UPDATE_STOCK(1,'RESTAR','20');
CALL SP_UPDATE_STOCK(1,'ROSTAR','20'); -- MESAJE DE ERROR POR PARAMETRO ESCRITO DE MANERA INCORRECTA
CALL SP_UPDATE_STOCK(1,'RESTAR','180'); -- MENSAJE DE ERROR POR RESTAR MAS STOCK DEL QUE EXISTE


-- Test del procedimiento SP_RESTORE_DATA_PROD_SALES
SET FOREIGN_KEY_CHECKS = 0;
SET SQL_SAFE_UPDATES = 0;
SELECT * FROM PRODUCTS;
DELETE FROM PRODUCTS WHERE ID_PROD BETWEEN 1 AND 5;
SELECT * FROM PRODUCTS;
SELECT * FROM LOG_PRODUCTS ORDER BY ID_LOG DESC LIMIT 20;
CALL SP_RESTORE_DATA_PROD_SALES(181,'PRODUCTS');
CALL SP_RESTORE_DATA_PROD_SALES(182,'PRODUCTS');
CALL SP_RESTORE_DATA_PROD_SALES(183,'PRODUCTS');
CALL SP_RESTORE_DATA_PROD_SALES(184,'PRODUCTS');
CALL SP_RESTORE_DATA_PROD_SALES(185,'PRODUCTS');
SELECT * FROM PRODUCTS LIMIT 20;
CALL SP_RESTORE_DATA_PROD_SALES(505,'PRODUCTS'); -- MENSAJE DE ERROR POR ID REFERENCIANDO UNA ACCION INSERT
CALL SP_RESTORE_DATA_PROD_SALES(182,'CLIENTS'); -- MENSAJE DE ERROR POR PARAMETRO ESCRITO DE MANERA INCORRECTA O TABLA EQUIVOCADA

-- Test procedimiento SP_SPLIT (Este procedimiento no se encuentra disponible para su uso directo, sin embargo aqui se comprueba su funcionamiento)
SET @STRING_CONCAT = 'A-AB-ABC-ABCD-1-12456-12FGT';
CALL SP_SPLIT(@STRING_CONCAT, "-", @A,@B,@C,@D,@E,@F,@G);
SELECT @A;
SELECT @B;
SELECT @C;
SELECT @D;
SELECT @E;
SELECT @F;
SELECT @G;

