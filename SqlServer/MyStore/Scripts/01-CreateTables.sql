/**********************************************************************
***********************************************************************
**********             CREACION DE LA BASE DE DATOS          ********** 
**********                      MyStoreDb                    **********
***********************************************************************
**********************************************************************/

CREATE DATABASE MyStoreDb;
GO

USE MyStoreDB;

CREATE TABLE [STATE](
	ID_STATE INT,
	[NAME] VARCHAR(70) NOT NULL,
	CONSTRAINT PK_STATE PRIMARY KEY(ID_STATE)
);


CREATE TABLE CITY(
	ID_CITY INT IDENTITY(1,1),
	[NAME] VARCHAR(255) NOT NULL,
	ID_STATE INT NOT NULL,
	CONSTRAINT PK_CITY PRIMARY KEY(ID_CITY),
	CONSTRAINT FK_CITY_STATE FOREIGN KEY(ID_STATE)
		REFERENCES [STATE] (ID_STATE)
);


CREATE TABLE CUSTOMER_TYPE(
	ID_CUSTOMER_TYPE INT,
	[DESCRIPTION] VARCHAR(20) NOT NULL,
	CONSTRAINT PK_CUSTOMER_TYPE PRIMARY KEY (ID_CUSTOMER_TYPE)
);

CREATE TABLE IDENTIFIER_TYPE(
	ID_IDENTIFIER_TYPE INT IDENTITY(1,1),
	[DESCRIPTION] VARCHAR(10) NOT NULL,
	CONSTRAINT PK_IDENTIFIER_TYPE PRIMARY KEY (ID_IDENTIFIER_TYPE)
);


CREATE TABLE CUSTOMER(
	ID_CUSTOMER UNIQUEIDENTIFIER DEFAULT NEWID(),
	ID_CUSTOMER_TYPE INT NOT NULL,--FK
	ID_IDENTIFIER_TYPE INT NOT NULL,--FK
	IDENTIFIER_NUMBER BIGINT NOT NULL,
	[NAME] VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(30) DEFAULT(NULL),
	GENDER CHAR NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	BIRTH_DATE DATE,
	ID_CITY INT NOT NULL,
	STREET VARCHAR(50) NOT NULL,
	NUMBER INT NOT NULL,	
	CONSTRAINT PK_CUSTOMER PRIMARY KEY (ID_CUSTOMER),
	CONSTRAINT FK_CUSTOMER_CUSTOMER_TYPE FOREIGN KEY(ID_CUSTOMER_TYPE)
		REFERENCES CUSTOMER_TYPE (ID_CUSTOMER_TYPE),
	CONSTRAINT FK_CUSTOMER_IDENTIFIER_TYPE FOREIGN KEY (ID_IDENTIFIER_TYPE)
		REFERENCES IDENTIFIER_TYPE(ID_IDENTIFIER_TYPE),
	CONSTRAINT FK_CUSTOMER_CITY FOREIGN KEY(ID_CITY)
		REFERENCES CITY (ID_CITY),
	CONSTRAINT UQ_CUSTOMER_DNI UNIQUE(IDENTIFIER_NUMBER),
	CONSTRAINT UQ_CUSTOMER_EMAIL UNIQUE(EMAIL),
	CONSTRAINT CHK_CUSTOMER_GENDER CHECK (GENDER IN('M', 'F', 'X'))
);
 

CREATE TABLE SECTOR(
	ID_SECTOR INT IDENTITY(1,1),
	[DESCRIPTION] VARCHAR(30) NOT NULL,
	CONSTRAINT PK_SECTOR PRIMARY KEY (ID_SECTOR)
);


CREATE TABLE EMPLOYEE(
	ID_EMPLOYEE UNIQUEIDENTIFIER DEFAULT NEWID(),
	DNI BIGINT NOT NULL,
	CUIL_CUIT BIGINT NOT NULL,
	[NAME] VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	GENDER CHAR NOT NULL,
	ENTRY_DATE DATE NOT NULL,
	ID_SECTOR INT NOT NULL, --FK
	EMAIL VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	BIRTH_DATE DATE NOT NULL,
	ID_CITY INT NOT NULL,--FK
	STREET VARCHAR(50) NOT NULL,
	NUMBER INT NOT NULL,	
	CONSTRAINT PK_EMPLOYEE PRIMARY KEY (ID_EMPLOYEE),
	CONSTRAINT FK_EMPLOYEE_SECTOR FOREIGN KEY(ID_SECTOR)
		REFERENCES SECTOR(ID_SECTOR),
	CONSTRAINT FK_EMPLOYEE_CITY FOREIGN KEY(ID_CITY)
		REFERENCES CITY (ID_CITY),
	CONSTRAINT UQ_EMPLOYEE_DNI UNIQUE(DNI),
	CONSTRAINT UQ_EMPLOYEE_EMAIL UNIQUE(EMAIL),
	CONSTRAINT CHK_EMPLOYEE_GENDER CHECK (GENDER IN('M', 'F', 'X'))
);


CREATE TABLE PRODUCT_BRAND(
	ID_BRAND INT IDENTITY(1,1),
	[NAME] VARCHAR(50) NOT NULL,
	CONSTRAINT PK_PRODUCT_BRAND PRIMARY KEY (ID_BRAND)
);


CREATE TABLE PRODUCT_CATEGORY(
	ID_CATEGORY INT IDENTITY(1,1),
	[NAME] VARCHAR(50) NOT NULL,
	CONSTRAINT PK_PRODUCT_CATEGORY PRIMARY KEY (ID_CATEGORY)
);
 

CREATE TABLE [PRODUCT](
	ID_PRODUCT INT IDENTITY(1,1),
	[NAME] VARCHAR(100) NOT NULL,
	ID_BRAND INT NOT NULL,--FK
	ID_CATEGORY INT NOT NULL,--FK
	CONSTRAINT PK_PRODUCT PRIMARY KEY(ID_PRODUCT),
	CONSTRAINT FK_PRODUCT_PRODUCT_BRAND FOREIGN KEY(ID_BRAND)
		REFERENCES PRODUCT_BRAND(ID_BRAND),
	CONSTRAINT FK_PRODUCT_PRODUCT_CATEGORY FOREIGN KEY(ID_CATEGORY)
		REFERENCES PRODUCT_CATEGORY(ID_CATEGORY)
);


CREATE TABLE PRODUCT_PRICE(
	ID_PRODUCT INT, --FK
	PRICE DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_PRODUCT_PRICE PRIMARY KEY(ID_PRODUCT),
	CONSTRAINT FK_PRODUCT_PRICE_PRODUCT FOREIGN KEY(ID_PRODUCT)
		REFERENCES [PRODUCT](ID_PRODUCT)
);

CREATE TABLE PRODUCT_PRICE_HISTORY(
	ID_PRODUCT INT,
	[DATE] DATETIME NOT NULL,
	PRICE DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_PRODUCT_PRICE_HISTORY PRIMARY KEY(ID_PRODUCT, [DATE]),
	CONSTRAINT FK_PRODUCT_PRICE_HISTORY_PRODUCT FOREIGN KEY(ID_PRODUCT)
		REFERENCES [PRODUCT](ID_PRODUCT)
);


CREATE TABLE PRODUCT_STOCK(
	ID_PRODUCT INT, --FK
	STOCK INT NOT NULL,
	CONSTRAINT PK_PRODUCT_STOCK PRIMARY KEY(ID_PRODUCT),
	CONSTRAINT FK_PRODUCT_STOCK_PRODUCT FOREIGN KEY (ID_PRODUCT)
		REFERENCES [PRODUCT](ID_PRODUCT),
	CONSTRAINT CHK_PRODUCT_STOCK_0 CHECK(STOCK >= 0)
);


CREATE TABLE DELIVERY_METHOD(
	ID_DELIVERY_METHOD INT IDENTITY(1,1),
	[DESCRIPTION] VARCHAR(30) NOT NULL,
	CONSTRAINT PK_DELIVERY_METHOD PRIMARY KEY(ID_DELIVERY_METHOD)
);


CREATE TABLE [ORDER](
	ID_ORDER INT IDENTITY(1,1),
	[DATE] DATETIME NOT NULL,
	ID_CUSTOMER UNIQUEIDENTIFIER NOT NULL, --FK
	ID_EMPLOYEE UNIQUEIDENTIFIER NOT NULL, --FK
	ID_DELIVERY_METHOD INT NOT NULL, --FK
	CONSTRAINT PK_ORDER PRIMARY KEY (ID_ORDER),
	CONSTRAINT FK_ORDER_CUSTOMER FOREIGN KEY (ID_CUSTOMER)
		REFERENCES CUSTOMER(ID_CUSTOMER),
	CONSTRAINT FK_ORDER_EMPLOYEE FOREIGN KEY (ID_EMPLOYEE)
		REFERENCES EMPLOYEE(ID_EMPLOYEE),
	CONSTRAINT FK_ORDER_DELIVERY_METHOD FOREIGN KEY (ID_DELIVERY_METHOD)
		REFERENCES DELIVERY_METHOD(ID_DELIVERY_METHOD)
);


CREATE TABLE ORDER_DETAIL(
	ID_ORDER INT NOT NULL, --FK
	ID_PRODUCT INT NOT NULL, --FK
	QUANTITY INT NOT NULL,
	CONSTRAINT PK_ORDER_DETAIL PRIMARY KEY(ID_ORDER, ID_PRODUCT),
	CONSTRAINT FK_ORDER_DETAIL_ORDER FOREIGN KEY (ID_ORDER)
		REFERENCES [ORDER](ID_ORDER),
	CONSTRAINT FK_ORDER_DETAIL_PRODUCT FOREIGN KEY(ID_PRODUCT)
		REFERENCES [PRODUCT](ID_PRODUCT)
);


CREATE TABLE INVOICE(
	ID_INVOICE UNIQUEIDENTIFIER DEFAULT NEWID(),
	[DATE] DATETIME NOT NULL,
	ID_ORDER INT NOT NULL, --FK
	INVOICE_TYPE VARCHAR(10) NOT NULL,
	TOTAL DECIMAL(10,2) NOT NULL,
	CONSTRAINT PK_INVOICE PRIMARY KEY (ID_INVOICE),
	CONSTRAINT FK_INVOICE_ORDER FOREIGN KEY (ID_ORDER)
		REFERENCES [ORDER](ID_ORDER),
	CONSTRAINT UQ_INVOICE_ID_ORDER UNIQUE(ID_ORDER)
);


CREATE TABLE DELIVERY_NOTE(
	ID_DELIVERY_NOTE INT IDENTITY(1,1),
	[DATE] DATETIME NOT NULL,
	ID_ORDER INT NOT NULL, --FK
	CONSTRAINT PK_DELIVERY_NOTE PRIMARY KEY (ID_DELIVERY_NOTE),
	CONSTRAINT FK_DELIVERY_NOTE_ORDER FOREIGN KEY (ID_ORDER)
		REFERENCES [ORDER](ID_ORDER),
	CONSTRAINT UQ_DELIVERY_NOTE_ID_ORDER UNIQUE(ID_ORDER)
);


CREATE TABLE PAY_METHOD(
	ID_PAY_METHOD INT IDENTITY(1,1),
	[DESCRIPTION] VARCHAR(50) NOT NULL,
	CONSTRAINT PK_PAYMENT_METHOD PRIMARY KEY (ID_PAY_METHOD)
);


CREATE TABLE PAY_RECEIPT(
	ID_PAY_RECEIPT UNIQUEIDENTIFIER DEFAULT NEWID(),
	[DATE] DATETIME NOT NULL,
	ID_INVOICE UNIQUEIDENTIFIER NOT NULL, --FK
	ID_PAY_METHOD INT NOT NULL, --FK
	CONSTRAINT PK_PAY_RECEIPT PRIMARY KEY (ID_PAY_RECEIPT),
	CONSTRAINT FK_PAY_RECEIPT_INVOICE FOREIGN KEY (ID_INVOICE)
		REFERENCES INVOICE(ID_INVOICE),
	CONSTRAINT FK_PAY_RECEIPT_PAY_METHOD FOREIGN KEY (ID_PAY_METHOD)
		REFERENCES PAY_METHOD(ID_PAY_METHOD),
	CONSTRAINT UQ_PAY_RECEIPT_ID_INVOICE UNIQUE(ID_INVOICE)
);


CREATE TABLE PROMOTION(
	ID_PROMOTION UNIQUEIDENTIFIER DEFAULT NEWID(),
	[DESCRIPTION] VARCHAR(60) NOT NULL,
	[START_DATE] DATE NOT NULL,
	END_DATE DATE NOT NULL,
	QUANTITY_PRODUCT INT NOT NULL,
	DISCOUNT_PERCENTAGE INT NOT NULL,
	CONSTRAINT PK_PROMOTION PRIMARY KEY (ID_PROMOTION),
	CONSTRAINT CHK_DISCOUNT_PERCENTAGE
		CHECK(DISCOUNT_PERCENTAGE BETWEEN 1 AND 99)
)


CREATE TABLE ORDER_PROMOTION(
	ID_ORDER INT NOT NULL, --FK
	ID_PROMOTION UNIQUEIDENTIFIER NOT NULL, --FK
	CONSTRAINT PK_ORDER_PROMOTION PRIMARY KEY (ID_ORDER, ID_PROMOTION),
	CONSTRAINT FK_ORDER_PROMOTION_ORDER FOREIGN KEY (ID_ORDER)
		REFERENCES [ORDER](ID_ORDER),
	CONSTRAINT FK_ORDER_PROMOTION_PROMOTION FOREIGN KEY (ID_PROMOTION)
		REFERENCES PROMOTION(ID_PROMOTION)
);


CREATE TABLE PROMOTION_PRODUCT(
	ID_PROMOTION UNIQUEIDENTIFIER NOT NULL, --FK
	ID_PRODUCT INT NOT NULL, --FK
	CONSTRAINT PK_PROMOTION_PRODUCT PRIMARY KEY (ID_PROMOTION, ID_PRODUCT),
	CONSTRAINT FK_PROMOTION_PRODUCT_PRODUCT FOREIGN KEY (ID_PRODUCT)
		REFERENCES [PRODUCT](ID_PRODUCT),
	CONSTRAINT FK_PROMOTION_PRODUCT_PROMOTION FOREIGN KEY (ID_PROMOTION)
		REFERENCES PROMOTION(ID_PROMOTION)
);